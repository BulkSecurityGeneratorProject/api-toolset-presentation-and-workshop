/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (3.3.4).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package de.axa.api.platform.web.gen.api;

import de.axa.api.platform.web.gen.api.model.EchoResponse;
import de.axa.api.platform.web.gen.api.model.Error;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2019-07-01T13:28:54.462Z[Etc/UTC]")

@Validated
@Api(value = "echo", description = "the echo API")
public interface EchoApi {

    default EchoApiDelegate getDelegate() {
        return new EchoApiDelegate() {};
    }

    @ApiOperation(value = "", nickname = "echo", notes = "Returns the 'message' to the caller", response = EchoResponse.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = EchoResponse.class),
        @ApiResponse(code = 200, message = "Error", response = Error.class) })
    @RequestMapping(value = "/echo",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<EchoResponse> echo(@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "message", required = true) String message,@ApiParam(value = "" ) @RequestHeader(value="headerParam", required=false) String headerParam) {
        return getDelegate().echo(message, headerParam);
    }

}
